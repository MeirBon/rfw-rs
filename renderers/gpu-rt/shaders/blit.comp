#version 450
#extension GL_GOOGLE_include_directive : require
#include "structs.glsl"
#include "bindings.glsl"

layout (local_size_x = 16, local_size_y = 4, local_size_z = 1) in;

layout(set = 0, binding = I_OUTPUT, rgba32f) uniform writeonly image2D OutputTex;
layout(std430, set = 0, binding = I_CAMERA) buffer Camera {
    CameraView camera;
    int blueNoise[];
};
layout(std430, set = 0, binding = I_ACC_BUF) buffer accBuffer { vec4 acPixels[]; };

void main()
{
    const ivec2 pixel_id = ivec2(gl_GlobalInvocationID.xy);
    if (any(greaterThanEqual(pixel_id, ivec2(camera.width, camera.height)))) {
        return;
    }

    imageStore(OutputTex, pixel_id, sqrt(acPixels[pixel_id.x + pixel_id.y * camera.width] * 1.0f / (camera.sample_count + 1)));
}